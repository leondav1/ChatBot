#!/usr/bin/env python3
import random
from datetime import datetime

from reg_data import token, GROUP_ID

import vk_api
import vk_api.bot_longpoll


class MyVkBotLongPoll(vk_api.bot_longpoll.VkBotLongPoll):
    def listen(self):
        while True:
            try:
                for event in self.check():
                    yield event
            except Exception as exc:
                # print('error', exc)
                pass


class Bot:
    def __init__(self, group_id, token):
        self.group_id = group_id
        self.token = token

        self.vk = vk_api.VkApi(token=token)
        self.api = self.vk.get_api()
        self.long_poller = MyVkBotLongPoll(self.vk, self.group_id)

    def start(self):
        for event in self.long_poller.listen():
            try:
                self.on_event(event=event)
            except Exception as exc:
                print(exc)

    def on_event(self, event):
        print(event)
        if event.type == vk_api.bot_longpoll.VkBotEventType.MESSAGE_NEW:
            print('Incoming message:', event.object.message['text'])
            user = self.api.users.get(user_ids=event.object.message['from_id'], fields='verified')
            sticker = ''
            if event.object.message['attachments']:
                sticker = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å—Ç–∏–∫–µ—Ä—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —è –µ—â—ë –Ω–µ —É–º–µ—é((('
            if user[0]["first_name"] == '–î–º–∏—Ç—Ä–∏–π':
                echo_message = f'–ü—Ä–∏–≤–µ—Ç, {user[0]["first_name"]}! ' \
                               f'–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {event.object.message["text"] + sticker}' \
                               f'\n–ò, —Ç–∞–∫–∂–µ, –Ω–∞–ø–æ–º–∏–Ω–∞—é –≤–∞–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–ø–ª–∞—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 400 —Ä—É–±.)))' \
                               f'\n–ü—Ä–∏—è—Ç–Ω–æ –±—ã–ª–æ —Ç–µ–±—è —É—Å–ª—ã—à–∞—Ç—å!!! üòé'
            else:
                echo_message = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user[0]["first_name"]}! ' \
                               f'–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {event.object.message["text"] + sticker}'
            print('Outgoing message:', echo_message)
            self.api.messages.send(
                random_id=random.randint(0, 2 ** 40),
                message=echo_message,
                peer_id=event.object.message['peer_id']
            )
            with open(file='logfile.log', mode='a+', encoding='utf-8') as file:
                file.write(f'user_id: {event.object.message["from_id"]} - {datetime.now()}\n')
        else:
            print('While I can not respond to this event,', event.type)


if __name__ == '__main__':
    bot = Bot(group_id=GROUP_ID, token=token)
    bot.start()
